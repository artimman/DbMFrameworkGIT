{% extends 'base.phtml' %}

{% block head %}
    <!-- Block head /home:example -->
{% endblock %}

{% block content %}
    {% include '_include/messages.phtml' %}

    <!-- Main Content -->
    <main>
        <div class="container mt-4 px-4">
            <p class="fs-5">{{ $this->trans('index.lead') }}</p>
            <div class="row row-cols-1 row-cols-lg-2 g-4 py-4">
                <div class="feature col">
                    <h2>Home/Landingpage na plikach tekstowych</h2>
                    <p>Systemy typu CMS prawie zawsze opierają się na współpracy z bazami danych. Co zatem mogą zrobić użytkownicy niewielkich serwisów, stron typu landingpage lub wizytówka? Pomocnym rozwiązaniem jest tu system stworzony na plikach tekstowych. Pozwala on na zarządzanie i bieżącą edycję treści na stronach zbudowanych w oparciu o pliki tekstowe. Funkcjonalność aplikacji utworzonych na plikach tekstowych jest zbliżona do systemów CMS współpracujących z bazami danych.</p>
                    <p class="p-3 bg-info bg-opacity-10 border border-info rounded rounded-3">Zapoznaj się z instrukcją w pliku README.md i skonfiguruj poprawnie aplikacje. W&nbsp;przypadku instalacji frameworka na serwerze zdalnym w domenie - domenę należy skierować na adres katalogu 'public'. W przypadku instalacji na serwerze lokalnym (localhost) utwórz katalog np. dbmframework, w tym katalogu dla pliku .htaccess ustaw RewriteBase /dbmframework/ oraz jeśli serwer tego wymaga w katalogu /public/ w pliku .htaccess ustaw RewriteBase /dbmframework/public/.</p>
                    <ul>
                        <li>
                            <a href="home" class="fw-bold">Home</a> - method index() in HomeController
                            <p class="small ms-3 mb-0">Starter aplikacji dla DbMFramework. Przykładowy adres: <b>home</b> - zawartość strony statyczna.</p>
                        </li>
                        <li>
                            <a href="about.html" class="fw-bold">About</a> - method index() in AboutController with extension .html
                            <p class="small ms-3 mb-0">Przykładowy adres: <b>about.html</b> - zawartość strony (content) należy utworzyć odpowiednio dla nazwy w pliku about.txt. Kolejne podstrony można dodać w panelu administracyjnym.</p>
                        </li>
                        <li>
                            <a href="page/site" class="fw-bold">Page -> Site</a> - siteMethod() in PageController
                            <p class="small ms-3 mb-0">Przykładowy adres: <b>page/site</b> - zawartość strony należy utworzyć odpowiednio dla nazwy w pliku page-site.txt. Pliki z zawartością strony znajdują się w katalogu 'data/content/'.</p>
                        </li>
                        <li>
                            <a href="your-website-title.site.html" class="fw-bold">Page -> Your website title</a> - siteMethod() in PageController with extension .html
                            <p class="small ms-3 mb-0">Przykładowy adres: <b class="text-success">your-website-title</b><b>.site.html</b> - zawartość strony (content) należy utworzyć odpowiednio dla nazwy w pliku page-your-website-title.txt.</p>
                        </li>
                    </ul>
                </div>
                <div class="feature col">
                    <h2>Blog/Portal system na bazie danych</h2>
                    <p>Systemy zarządzania treścią CMS są stworzone w celu maksymalnego ułatwienia procesu tworzenia i prowadzenia serwisów WWW, a także ich późniejszej rozbudowy i aktualizacji. Publikacja nowych treści przez administratora serwisu następuje poprzez zapisanie ich w bazie danych (np. MySQL), po czym generowane są dynamiczne podstrony z wykorzystaniem szablonów oraz treści. Z reguły takie systemy są bezpłatne o ile nie potrzebujesz zaawansowanych dodatków np. skryptu płatności, indywidualnego responsywnego szablonu graficznego, które wymagają pracy eksperta.</p>
                    <p class="p-3 bg-info bg-opacity-10 border border-info rounded rounded-3">W celu rejestracji, logowania użytkownika na konto oraz uruchomienia bardziej zaawansowanych funkcjonalności utwórz bazę danych. Przykładowa baza, którą możesz zaimportować dla stworzonego projektu znajduje się w katalogu _Documents/Database/ plik dbm_cms.sql. Do importu i zarządzania bazą danych możesz użyć narzędzia np. phpMyAdmin.<br>Dane logowania użytkowników przykładowej bazy danych<br>Login: archie@mail.com lub Malina, Hasło: Admin123, Rola: ADMIN<br>Login: john@mail.com i/lub lucy@mail.com, Hasło: Test123, Rola: USER<br>Jeżeli chcesz korzystać z bazy danych nie zapomnij skonfigurować jej w pliku .env, wprowadź stałe: DB_HOST, DB_NAME, DB_USER, DB_PASSWORD.</p>
                    <h4>Moduły</h4>
                    <ul>
                        <li><a href="./" class="fw-bold">Blog / Portal</a></li>
                        <li><a href="panel" class="fw-bold">Demo Administration Panel</a></li>
                    </ul>
                    <h4>Rozszerzenia</h4>
                    <ul>
                        <li><a href="https://dbm.org.pl/script-php-dbmpayments.html" class="fw-bold" target="_blank">System płatności i automatyzacji sprzedaży</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </main>
{% endblock %}

{% block body %}
	<!-- Block body /home:example -->
{% endblock %}
